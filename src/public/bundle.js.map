{"version":3,"sources":["webpack:///webpack/bootstrap 6211e5ab728269e34c68","webpack:///../../../src/test1.fsx","webpack:///../../../~/fable-fuse/Observable.fs","webpack:///../~/fable-powerpack/Fetch.js","webpack:///../~/fable-powerpack/Promise.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACvBQ,2BAAO,yBAAP;;AACJ;AAAA,2BACI;AAAA,gBAAW,sFAAyE,EAAzE,CAAX,MACA;AAAA,oBAAY,YAAZ,MACG;AAAA;AAAA;AAAoB,cADvB;AAAA,UADA;AAAA,MADJ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACwCiC;AAAA;AAAuB;;AAChC;AAAA;AAAuB;;AACR;AAAA;AAA6B;;AACxC;AAAA;AAA6B;;AACzC;AAAA;AAAmB;;;;;;;AC5DvC,4CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M,SAAQ,sBAAsB;AAC9B,SAAQ,iBAAiB;;AAEzB;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;;AAEA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,MAAK;AACL;AACA;AACA,kC;;;;;;AClDA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,SAAQ,cAAc;AACtB,SAAQ,UAAU;AAClB;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA,wEAAuE,gEAAgE;AACvI;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;AACA,EAAC,GAAG;;AAEJ,SAAQ;AACR;AACA;AACA;AACA,EAAC,GAAG;AACJ,oC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6211e5ab728269e34c68\n **/","\n#r \"../node_modules/fable-core/Fable.Core.dll\"\n#r \"../node_modules/fable-powerpack/Fable.PowerPack.dll\"\n\n#load \"../node_modules/fable-fuse/Observable.fs\"\n#load \"../node_modules/fable-fuse/Apis.fs\"\n\nopen Fable.Core\nopen Fuse\nopen Fable.Import\nopen Fable.PowerPack\nopen Fable.PowerPack.Fetch\n\n\nmodule test1 =\n    let data = Observable.create()\n    promise {\n        let! req = fetch \"http://az664292.vo.msecnd.net/files/ZjPdBhWNdPRMI4qK-colors.json\" []\n        let! json = req.json ()\n        do (data.value <- json) } |> ignore\n\n\n/** WEBPACK FOOTER **\n ** ../../../src/test1.fsx\n **/","ï»¿namespace Fuse\n\nopen System\nopen Fable.Core\nopen Fable.Import.JS    \n\nmodule Observable =   \n\n    type IObservable<'T> =\n        abstract member value : 'T with get, set        \n        abstract member map<'T,'U> : ('T -> 'U) -> IObservable<'U>\n        abstract member where: ('T -> bool) -> IObservable<'T>\n        // Lambdas with more than one argument must be converted to delegates to be called\n        // properly from JS: See https://github.com/fsprojects/Fable/blob/master/docs/source/docs/interacting.md#calling-f#-code-from-javascript\n        [<Emit(\"$0.map($1)\")>] abstract member mapi<'T, 'U> : Func<'T,int,'U> -> IObservable<'U>\n        abstract member count: unit -> IObservable<int>\n        [<Emit(\"$0.count($1)\")>] abstract member countWhere: ('T -> bool) -> IObservable<int>     \n        abstract member add: 'T -> unit\n        abstract member remove: 'T -> unit\n        abstract member tryRemove: 'T -> bool\n        abstract member removeAt: int -> unit\n        abstract member removeWhere: ('T -> bool) -> unit\n        abstract member refreshAll: IObservable<'T> -> Func<'T,'T,bool> -> Func<'T,'T,unit> -> ('T -> 'T) -> unit\n        abstract member forEach : ('T -> unit) -> unit        \n        abstract member clear : unit -> unit\n        abstract member indexOf : 'T -> int\n        abstract member contains : 'T -> bool\n        abstract member filter : ('T -> bool) -> IObservable<'T>\n        abstract member expand : unit -> IObservable<'T>\n        abstract member addSubscriber: (IObservable<'T> -> unit) -> unit\n        abstract member removeSubscriber: (IObservable<'T> -> unit) -> unit\n        abstract member length: int with get\n        abstract member toArray: unit -> 'T array\n        abstract member getAt : int -> 'T\n        abstract member replaceAt : int -> 'T -> unit\n        abstract member replaceAll : 'T array -> unit\n\n    type IUnsafeObservable<'T> = \n        inherit IObservable<'T>\n        [<Emit(\"$0.value{{=$1}}\")>] abstract member valueOverride : obj with get, set\n\n    type IObservable = \n        inherit IObservable<obj>                \n\n    type private ObservableFactory =\n        [<Emit(\"$0($1)\")>] abstract Invoke<'T> : element: 'T -> IObservable<'T>\n        [<Emit(\"$0()\")>] abstract Invoke<'T> : unit -> IObservable<'T>\n        [<Emit(\"$0($1)\")>] abstract InvokeUnsafe<'T> : element: 'T -> IUnsafeObservable<'T>\n        [<Emit(\"$0()\")>] abstract InvokeUnsafe<'T> : unit -> IUnsafeObservable<'T>\n        [<Emit(\"$0()\")>] abstract Invoke : unit -> IObservable\n        [<Emit(\"$0($1...)\")>] abstract InvokeList<'T> : [<ParamArray>] elements : 'T array -> IObservable<'T>\n\n    // An empty string is also equivalent to \"default\"\n    [<Import(\"default\", \"FuseJS/Observable\")>]\n    let private observable: ObservableFactory = failwith \"JS only\"\n\n    let createWith<'T> (elem : 'T) = observable.Invoke(elem)\n    let createTyped<'T>() = observable.Invoke<'T>()\n    let createUnsafeWith<'T> (elem : 'T) = observable.InvokeUnsafe(elem)\n    let createUnsafeTyped<'T> = observable.InvokeUnsafe<'T>()\n    let create () = observable.Invoke()\n    // A problem has been found in Fable (to be fixed) if this function is not inlined\n    let inline createList<'T> (elements : 'T array) = observable.InvokeList<'T>(elements)\n    \n\n\n\n/** WEBPACK FOOTER **\n ** ../../../~/fable-fuse/Observable.fs\n **/","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Promise as _Promise } from \"./Promise\";\nimport { toJson, ofJson } from \"fable-core/Serialize\";\n\nfunction _fetch(url, init) {\n    return fetch(url, init).then(function (response) {\n        return response.ok ? response : function () {\n            throw new Error(String(response.status) + \" \" + response.statusText + \" for URL \" + response.url);\n        }();\n    });\n}\n\nexport { _fetch as fetch };\nexport function tryFetch(url, init) {\n    return _Promise.result(_fetch(url, init));\n}\nexport function fetchAs(url, init, _genArgs) {\n    return _fetch(url, init).then(function (fetched) {\n        return fetched.text();\n    }).then(function (json) {\n        return ofJson(json, {\n            T: _genArgs.T\n        });\n    });\n}\nexport function tryFetchAs(url, init, _genArgs) {\n    return _Promise.result(fetchAs(url, init, {\n        T: _genArgs.T\n    }));\n}\nexport function postRecord(url, record, properties) {\n    var props = Object.assign({\n        method: \"POST\",\n        headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n        body: toJson(record)\n    }, properties);\n    return _fetch(url, props);\n}\nexport function tryPostRecord(url, record, properties) {\n    return _Promise.result(postRecord(url, record, properties));\n}\nexport function patchRecord(url, record, properties) {\n    var props = Object.assign({\n        method: \"PATCH\",\n        headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n        body: toJson(record)\n    }, properties);\n    return _fetch(url, props);\n}\n//# sourceMappingURL=Fetch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/fable-powerpack/Fetch.js\n ** module id = 2\n ** module chunks = 0\n **/","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { map, Result } from \"./Result\";\nimport { setType } from \"fable-core/Symbol\";\nimport _Symbol from \"fable-core/Symbol\";\n\nvar _Promise = function (__exports) {\n    var result = __exports.result = function result(a) {\n        return a.then(function (arg0) {\n            return new Result(\"Ok\", [arg0]);\n        }, function (arg0) {\n            return new Result(\"Error\", [arg0]);\n        });\n    };\n\n    var mapResult = __exports.mapResult = function mapResult(fn, a) {\n        return a.then(function (a_1) {\n            return map(fn, a_1);\n        });\n    };\n\n    var bindResult = __exports.bindResult = function bindResult(fn, a) {\n        return a.then(function (a_1) {\n            return a_1.Case === \"Error\" ? Promise.resolve(new Result(\"Error\", [a_1.Fields[0]])) : result(fn(a_1.Fields[0]));\n        });\n    };\n\n    var PromiseBuilder = __exports.PromiseBuilder = function () {\n        _createClass(PromiseBuilder, [{\n            key: _Symbol.reflection,\n            value: function value() {\n                return {\n                    type: \"Fable.PowerPack.Promise.PromiseBuilder\",\n                    properties: {}\n                };\n            }\n        }]);\n\n        function PromiseBuilder() {\n            _classCallCheck(this, PromiseBuilder);\n        }\n\n        _createClass(PromiseBuilder, [{\n            key: \"For\",\n            value: function For(seq, body) {\n                var p = Promise.resolve();\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var a = _step.value;\n                        p = p.then(function () {\n                            return body(a);\n                        });\n                    };\n\n                    for (var _iterator = seq[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        _loop();\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return p;\n            }\n        }, {\n            key: \"While\",\n            value: function While(guard, p) {\n                var _this = this;\n\n                return guard() ? p.then(function () {\n                    return _this.While(guard, p);\n                }) : Promise.resolve();\n            }\n        }, {\n            key: \"TryFinally\",\n            value: function TryFinally(p, compensation) {\n                return p.then(function (x) {\n                    compensation();\n                    return x;\n                }, function (er) {\n                    compensation();\n                    throw er;\n                });\n            }\n        }, {\n            key: \"Delay\",\n            value: function Delay(generator) {\n                return {\n                    then: function then(f1, f2) {\n                        try {\n                            return generator().then(f1, f2);\n                        } catch (er) {\n                            if (f2 == null) {\n                                return Promise.reject(er);\n                            } else {\n                                try {\n                                    return Promise.resolve(f2(er));\n                                } catch (er_1) {\n                                    return Promise.reject(er_1);\n                                }\n                            }\n                        }\n                    },\n                    catch: function _catch(f) {\n                        try {\n                            return generator().catch(f);\n                        } catch (er) {\n                            try {\n                                return Promise.resolve(f(er));\n                            } catch (er_1) {\n                                return Promise.reject(er_1);\n                            }\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"Using\",\n            value: function Using(resource, binder) {\n                return this.TryFinally(binder(resource), function () {\n                    resource.Dispose();\n                });\n            }\n        }]);\n\n        return PromiseBuilder;\n    }();\n\n    setType(\"Fable.PowerPack.Promise.PromiseBuilder\", PromiseBuilder);\n    return __exports;\n}({});\n\nexport { _Promise as Promise };\nexport var PromiseImpl = function (__exports) {\n    var promise = __exports.promise = new _Promise.PromiseBuilder();\n    return __exports;\n}({});\n//# sourceMappingURL=Promise.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/fable-powerpack/Promise.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}